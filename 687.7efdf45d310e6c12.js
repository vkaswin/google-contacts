"use strict";(self.webpackChunkgoogle_contacts=self.webpackChunkgoogle_contacts||[]).push([[687],{2687:(f,u,o)=>{o.r(u),o.d(u,{BulkUploadComponent:()=>b});var e=o(1571),h=o(6895),p=o(1489),d=o(8010),a=o(1769);let b=(()=>{class l{constructor(){this.contactService=(0,e.f3M)(a.y),this.router=(0,e.f3M)(p.F0),this.snackBar=(0,e.f3M)(d.ux)}showSnackBar(s){this.snackBar.open(s,"",{duration:3e3})}handleFileChange(s){let i=s.target.files;if(!i||!i.length)return;const t=new FormData;t.append("file",i[0]),this.contactService.bulkUpload(t).subscribe(({message:n})=>{this.showSnackBar(n),this.router.navigateByUrl("/contact/list")})}}return l.\u0275fac=function(s){return new(s||l)},l.\u0275cmp=e.Xpm({type:l,selectors:[["app-bulk-upload"]],standalone:!0,features:[e.jDz],decls:3,vars:0,consts:[["for","file-upload"],["id","file-upload","type","file","hidden","","accept","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",3,"input"]],template:function(s,i){1&s&&(e.TgZ(0,"label",0),e._uU(1,"bulk-upload works!"),e.qZA(),e.TgZ(2,"input",1),e.NdJ("input",function(n){return i.handleFileChange(n)}),e.qZA())},dependencies:[h.ez,d.ZX],encapsulation:2}),l})()},1769:(f,u,o)=>{o.d(u,{y:()=>c});var e=o(1571),h=o(529);const p=(0,e.X6Q)()?"http://localhost:8000":"https://google-contacts-ashy.vercel.app",a=`${p}/api/contact`,l=`${p}/api/label`;let c=(()=>{class s{constructor(){this.isExpanded=!0,this.totalContacts=0,this.labels=[],this.onUpdateLabel=new e.vpe,this.onCreateLabel=new e.vpe,this.onDeleteLabel=new e.vpe,this.http=(0,e.f3M)(h.eN),this.onCreateLabel.subscribe(t=>{this.labels.push(t)}),this.onUpdateLabel.subscribe(({labelId:t,data:n})=>{let r=this.labels.findIndex(({_id:v})=>v===t);-1!==r&&(this.labels[r]={...this.labels[r],...n})}),this.onDeleteLabel.subscribe(t=>{let n=this.labels.findIndex(({_id:r})=>r===t);-1!==n&&this.labels.splice(n,1)})}setIsExpanded(t){this.isExpanded=t}getContactById(t){return this.http.get(`${a}/${t}/detail`)}getAllContacts(t,n){let r={};return t&&(r.q=t),n&&(r.labelId=n),this.http.get(`${a}/all`,{params:r})}updateContactById(t,n){return this.http.put(`${a}/${t}/update`,n)}removeContacts(t){return this.http.delete(`${a}/remove`,{body:t})}addToFavourite(t){return this.http.put(`${a}/${t}/favourite`,{})}removeFromFavourite(t){return this.http.delete(`${a}/${t}/favourite`)}createContact(t){return this.http.post(`${a}/create`,t)}recoverContact(t){return this.http.put(`${a}/${t}/recover`,{})}getAllTrash(){return this.http.get(`${a}/trash`)}clearTrash(t){return this.http.delete(`${a}/trash`,{body:t})}downloadSampleFile(){return this.http.get(`${a}/sample`,{responseType:"blob"})}bulkUpload(t){return this.http.post(`${a}/upload`,t)}exportContacts(){return this.http.get(`${a}/export`,{responseType:"blob"})}getContactCount(){this.http.get(`${a}/count`).subscribe(({data:{count:t}})=>{this.totalContacts=t})}getAllLabels(){this.http.get(`${l}/all`).subscribe(({data:{labels:t}})=>{this.labels=t})}createLabel(t){return this.http.post(`${l}/create`,t)}updateLabelById(t,n){return this.http.put(`${l}/${t}/update`,n)}removeLabelById(t){return this.http.delete(`${l}/${t}/remove`)}updateContactLabel(t,n){return this.http.put(`${a}/${t}/label`,n)}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275prov=e.Yz7({token:s,factory:s.\u0275fac,providedIn:"root"}),s})()}}]);